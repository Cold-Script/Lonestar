--[[
                      ████                 █████
                  ████████████          ██████████
                ███████      ██        ███    ██████
               █████                             █████
              ████                                 ████
              ██      ░░░░░░░░░░░░░░░░░░░░░░░░     ███
             ██   ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░   ██
               ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
             ░░░▒▒▒░░▒░░░░░░░░░░░░░░░░░░░░░░░░░░░▒░░░░░
           ░▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒░░░
         ▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▒░░░
        ▒▒░░░░░░░░░░░░░░░░░░░▒░░░░░░▒░░░░░░░▓██▒░░░░░░░░▒░░░
       ▒░░░░░░░░░░▒███████▒░░░▒░░░░▒░░░░░███████▓▓░░░░░░░▒░░░
      ▒▒▒░░░░░░░░███████▓▓▓▓░░▒░░░░░░░░▓███████▓▓▓█░░░░░░▒░░░░
     ▒▒▒▒░░░░░░░▓████████▓▓█░░▒░░░░░░░░████████████░░░░░░▒░░░░
   ▒▒▒▒▒░░░░░░░▓███████████░░▒░░░░░░░░▒██████████░░░░░░░▒░░░░░
  ▒▒▒▒▒▒░░░░░░░░██████████░░░▒░░░░▒░░░░░███████▒░░░░░░░▒▒░░░░░
  ▒▒▒▒▒▒▒░░░░░░░░░██████░░░░▒▒░░░░▒▒░░░░░░░░░░░░░░░░░░▒▒░░░░░░
  ▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░▒▒░░░░░░▒▒░░░░░░░░░░░░░░░░▒▒░░░░░░░
  ▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░▒▒░░░░░░░░░░▒▒▒░░░░░░░░░░▒▒▒░░░░░░░░▒
  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▓█▓░░░░░░░░▒
  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░▒░░░░░░░░░░░█▓███░░░░░▒▒▒
   ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒░▒▒▒▒░░░▒██▒▒░░░░░░▒▒
    ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▒██▓▒▒▒░▒░░░░▒▒▒
     ▒▒▒▒▒▒▒▒▒▒▒██▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓██▓▒▒▒▒▒▒▒░░░░▒▒▒
      ▒▒▒▒▒▒▒▒▒▒▒▒▒▓███▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓████▒▒▒▒▒▒▒▒▒░▒▒▒░░▒▒▒
       ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓███████████▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒
        ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
          ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
           ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
              ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
                 ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
                    ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
                           ▒▒▒▒▒▒▒▒▒▒▒
-Game : DOORS (ROBLOX)
--Credits and edit by : GV, Wearspear and rechedmcvn
---Description : Its awesome when play doors.
]]--
print("[Lonestar] - Hello World")
local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Cold-Script/Library/refs/heads/main/Library.txt"))()
local LibraryESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/Cold-Script/ESPBETA/refs/heads/main/Esp.lua"))()
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Cold-Script/Warning/refs/heads/main/Warning.lua"))()

local Window = Lib:Window("Lonestar | Thanks Use : " .. game.Players.LocalPlayer.Name)
local Tab = {
Main = Window:Tab("Main"),
Players = Window:Tab("Players"),
Utilities = Window:Tab("Utilities"),
Visual = Window:Tab("Visual")
}


local Misc = Tab.Main:CraftPage(1)
Misc:Seperator("Misc")
Misc:Dropdown("Select On Death ",{"Lobby","Leave","Revive"},"",function(v)
_G.SelectMisc = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.EnabledOnDeath then
if game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectMisc == "Lobby" then
game:GetService("ReplicatedStorage").RemotesFolder.Lobby:FireServer()
elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectMisc == "Leave" then
game:Shutdown()
elseif game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 and _G.SelectMisc == "Revive" then
game:GetService("ReplicatedStorage").RemotesFolder.Revive:FireServer()
end
end
end)
end)
Misc:Toggle("Enabled On Death",false,function(v)
_G.EnabledOnDeath = v
end)
Misc:Button("Play Again",function()
game:GetService("ReplicatedStorage").RemotesFolder.PlayAgain:FireServer()
end)
Misc:Button("Reset Character",function()
game:GetService("Players").LocalPlayer.Character.Humanoid.Health = 0
end)
Misc:Seperator("Proximity Prompt")
Misc:Toggle("Instance Interact",false,function(v)
_G.InstanceInteract = v
if _G.InstanceInteract then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.HoldDuration = 0
end
end
InstanceInteract = workspace.CurrentRooms.ChildAdded:Connect(function(v)
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.HoldDuration = 0
end
end
end)
else
InstanceInteract:Disconnect()
end
end)
Misc:Toggle("Through Interact",false,function(v)
_G.ThroughInteract = v
if _G.ThroughInteract then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = false
end
end
ThroughInteract = workspace.CurrentRooms.ChildAdded:Connect(function(v)
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = false
end
end
end)
else
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.RequiresLineOfSight = true
end
end
ThroughInteract:Disconnect()
end
end)
Misc:Toggle("Remote Interact",false,function(v)
_G.RemoteInteract = v
if _G.RemoteInteract then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 15
end
end
RemoteInteract = workspace.CurrentRooms.ChildAdded:Connect(function(v)
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 15
end
end
end)
else
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("ProximityPrompt") then
v.MaxActivationDistance = 5
end
end
RemoteInteract:Disconnect()
end
end)


local Rooms = Tab.Main:CraftPage(2)
Rooms:Seperator("Rooms")
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.RemoteDoors then game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door").ClientOpen:FireServer()
end 
end)
end)
Rooms:Toggle("Remote Doors",false,function(v)
_G.RemoteDoors = v
end)
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.FastDoors then game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Door"):SetAttribute("FastOpen", true)
end 
end)
end)
Rooms:Toggle("Fast Doors",false,function(v)
_G.FastDoors = v
end)
game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("MoveDirection"):Connect(function()
if _G.ClosetsExitFix and game.Players.LocalPlayer.Character:GetAttribute("Hiding")==true then 
game:GetService("ReplicatedStorage").EntityInfo.CamLock:FireServer()
end 
end)
Rooms:Toggle("Closets Exit Fix",false,function(v)
_G.ClosetsExitFix = v
end)
Rooms:Seperator("World")
Rooms:Toggle("No LiveSanity",false,function(v)
_G.NoLiveSanity = v
while _G.NoLiveSanity do wait(1)
for _,v in workspace.CurrentCamera:GetChildren() do
if v.Name == "LiveSanity" and workspace:FindFirstChild("EntityModel") then
v.Enabled = not _G.NoLiveSanity
end
end
end
end)
Rooms:Toggle("No Void Roblox",false,function(v)
if v then
workspace.FallenPartsDestroyHeight = 0 / 0
else
workspace.FallenPartsDestroyHeight = -50000
end
end)
Rooms:Toggle("No Skybox",false,function(v)
if v then
workspace.Camera.SkyboxPart.Transparency = 1
else
workspace.Camera.SkyboxPart.Transparency = 0
end
end)
Rooms:Seperator("50")
Rooms:Button("Prize Library",function()
local Floor = game:GetService("ReplicatedStorage").GameData.Floor
local Paper = workspace:FindFirstChild("LibraryHintPaper",true) or workspace:FindFirstChild("LibraryHintPaperHard",true) or Players:FindFirstChild("LibraryHintPaper",true) or Players:FindFirstChild("LibraryHintPaperHard",true)
if not Paper then
print("Needed Paper")
return
end
local HintsNeeded = Floor.Value == "Fools" and 8 or 3
local Hints = 0
for _,Collected in pairs(game.Players.LocalPlayer.PlayerGui.PermUI.Hints:GetChildren()) do
if Collected.Name == "Icon" then
if Collected:IsA("ImageLabel") then
for _,Icon in pairs(Paper.UI:GetChildren()) do
if tonumber(Icon.Name) then
if Icon.ImageRectOffset == Collected.ImageRectOffset then
Hints += 1
end
end
end
end
end
end
if Hints < HintsNeeded then
print("Need Books")
return
end
local t = {}
for i = 1, Floor.Value == "Hotel" and 5 or 10 do
local Icon = Paper.UI[i]
local Number = -1
for _,Collected in pairs(game.Players.LocalPlayer.PlayerGui.PermUI.Hints:GetChildren()) do
if Collected.Name == "Icon" then
if Collected.ImageRectOffset == Icon.ImageRectOffset then
Number = tonumber(Collected.TextLabel.Text)
end
end
end
table.insert(t,Number)
end
for one=0,t[1]==-1 and 9 or 0 do
for two=0,t[2]==-1 and 9 or 0 do
for three=0,t[3]==-1 and 9 or 0 do
for four=0,t[4]==-1 and 9 or 0 do
for five=0,t[5]==-1 and 9 or 0 do
if Floor.Value == "Fools" then
for six=0,t[6]==-1 and 9 or 0 do
for seven=0,t[7]==-1 and 9 or 0 do
for eight=0,t[8]==-1 and 9 or 0 do
for nine=0,t[9]==-1 and 9 or 0 do
for ten=0,t[10]==-1 and 9 or 0 do
game:GetService("ReplicatedStorage").RemotesFolder.PL:FireServer((t[1]==-1 and one or t[1])..(t[2]==-1 and two or t[2])..(t[3]==-1 and three or t[3])..(t[4]==-1 and four or t[4])..(t[5]==-1 and five or t[5])..(t[6]==-1 and six or t[6])..(t[7]==-1 and seven or t[7])..(t[8]==-1 and eight or t[8])..(t[9]==-1 and nine or t[9])..(t[10]==-1 and ten or t[10]))
end
end
end
end
end
else
game:GetService("ReplicatedStorage").RemotesFolder.PL:FireServer((t[1]==-1 and one or t[1])..(t[2]==-1 and two or t[2])..(t[3]==-1 and three or t[3])..(t[4]==-1 and four or t[4])..(t[5]==-1 and five or t[5]))
end
end
end
end
end
end
end)
Rooms:Seperator("100")
Rooms:Toggle("Auto Elevator Electricity",false,function(v)
_G.AutoBreaker = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AutoBreaker then
game:GetService("ReplicatedStorage").RemotesFolder.EBF:FireServer()
end
end)
end)
Rooms:Button("Complete Elevator Electricity",function()
game:GetService("ReplicatedStorage").RemotesFolder.EBF:FireServer()
end)


local Players = Tab.Players:CraftPage(1)
Players:Seperator("Players")
Players:Dropdown("Walkspeed",{"20","25","30","35","40","45","50"},"",function(v)
_G.Speed = v
end)
Players:Toggle("Speed",false,function(v)
_G.EnabledSpeed = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.EnabledSpeed then
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = _G.Speed or 15
else
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 15
end
end)
end)
Players:Seperator("Added")
Players:Toggle("Eat Candy",false,function(v)
_G.EatCandy = v
game:GetService("RunService").RenderStepped:Connect(function()
if game.Players.LocalPlayer.Character:FindFirstChild("Candy",true) and _G.EatCandy then
game.Players.LocalPlayer.Character.Candy.Remote:FireServer()
end
end)
end)
Players:Toggle("Noclip",false,function(v)
_G.Noclip = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character.Collision.CanCollide = not _G.Noclip
game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = not _G.Noclip
end)
end)
Players:Toggle("No Accessories",false,function(v)
_G.NoSlow = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character.Head.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftFoot.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftHand.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftLowerArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftLowerLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftUpperArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LeftUpperLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.LowerTorso.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightFoot.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightFoot.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightHand.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightLowerArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightLowerLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightUpperArm.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.RightUpperLeg.Massless = not _G.NoSlow;
game.Players.LocalPlayer.Character.UpperTorso.Massless = not _G.NoSlow;
end)
end)
Players:Toggle("Always Can Jump",false,function(v)
_G.Jump = v
game:GetService("RunService").RenderStepped:Connect(function()
game.Players.LocalPlayer.Character:SetAttribute("CanJump", _G.Jump)
end)
end)
Players:Toggle("Auto Jump",false,function(v)
_G.AutoJump = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AutoJump then
game.Players.LocalPlayer.Character.Humanoid.Jump = true
end
end)
end)
local Bypass = Tab.Players:CraftPage(2)
Bypass:Seperator("Bypass")
local speedBoost, speedBoostFinished, speed = 30, false, false
if bypass then
if collisionClone then collisionClone:Destroy() end
speed = true       
local originalSpeed = SpeedBypass
repeat task.wait()
if not SpeedBypass then
SpeedBypass:SetValue(true)
end
until speedBoostFinished
SpeedBypass:SetValue(originalSpeed)
else
if not collisionClone then
collisionClone = game.Players.LocalPlayer.Character.Collision:Clone() do
collisionClone.CanCollide = false
collisionClone.Massless = true
collisionClone.Name = "CollisionClone"
if collisionClone:FindFirstChild("CollisionCrouch") then
collisionClone.CollisionCrouch:Destroy()
end   
collisionClone.Parent = game.Players.LocalPlayer.Character    
end
end
task.spawn(function()  
while not speedBoostFinished do
collisionClone.Massless = not collisionClone.Massless
task.wait(_G.SpeedBypass or 1.25)
end           
collisionClone.Massless = true                  
end)
end
Bypass:Toggle("Speed Bypass",false,function(v)
if v then
_G.SpeedBypass = 0.217
else
_G.SpeedBypass = 1.25
end
end)
Bypass:Toggle("Climb Ladder Bypass",false,function(v)
_G.LadderBypass = v
if v then
local progressPart = Instance.new("Part", workspace) do
progressPart.Anchored = true
progressPart.CanCollide = false
progressPart.Name = "Ladder_Bypass"
progressPart.Transparency = 1
end
if _G.LadderBypass and game.Players.LocalPlayer.Character:GetAttribute("Climbing") then
task.wait(1)
game.Players.LocalPlayer.Character:SetAttribute("Climbing", false)
end
else
if workspace:FindFirstChild("Ladder_Bypass") then 
workspace:FindFirstChild("Ladder_Bypass"):Destroy() 
end
end
end)
Bypass:Toggle("Crouch Spoof",false,function(v)
_G.CrouchSpoof = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.CrouchSpoof then
game:GetService("ReplicatedStorage").RemotesFolder.Crouch:FireServer(true)
else
game:GetService("ReplicatedStorage").RemotesFolder.Crouch:FireServer(false)
end
end)
end)
Bypass:Toggle("No Jammin",false,function(v)
_G.NoJammin = v
game:GetService("RunService").RenderStepped:Connect(function()
local Jammin = not game.ReplicatedStorage.LiveModifiers:FindFirstChild("Jammin")
game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game.Health.Jam.Playing = not _G.NoJammin or Jamman
game.SoundService.Main.Jamming.Enabled = not _G.NoJammin or Jammin
end)
end)
Bypass:Seperator("Camera")
Bypass:Dropdown("Field Of View",{"80","90","100","110","120"},"",function(v)
_G.FieldOfView = v
end)
Bypass:Toggle("Field Of View",false,function(v)
_G.Field = v
game:GetService("RunService").RenderStepped:Connect(function()
if _G.Field then
workspace.CurrentCamera.FieldOfView = _G.FieldOfView or 70
else
workspace.CurrentCamera.FieldOfView = 70
end
end)
end)
Bypass:Toggle("No Bob Camera",false,function(v)
_G.NoBobCam = v
game:GetService("RunService").RenderStepped:Connect(function()
require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game).spring.Speed = _G.NoBobCam and 9e9 or 5
end)
end)
Bypass:Button("No Camera Shake",function()
game:GetService("ReplicatedStorage").RemotesFolder.CamShake:Destroy()
end)


local Anti = Tab.Utilities:CraftPage(1)
Anti:Seperator("Anti-Entity")
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AntiSnare then
if game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):FindFirstChild("Snare") then
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):GetChildren()) do 
if v.Name == "Snare" then 
v.Hitbox.CanTouch = false
end 
end 
end 
end 
end)
Anti:Toggle("Anti-Snare",false,function(v)
_G.AntiSnare = v
end)
Anti:Toggle("Anti-Dupe",false,function(v)
_G.AntiDupe = v
while _G.AntiDupe do wait(0.1)
for _, v in (workspace:GetDescendants()) do
if v.Name == "DoorFake" and v:IsA("Model") then
v.Hidden.CanTouch = not _G.AntiDupe
if v:FindFirstChild("LockPart") and v.LockPart:FindFirstChild("UnlockPrompt") then
v.LockPart.UnlockPrompt.Enabled = not _G.AntiDupe
end
end
end
end
end)
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AntiChandelier then 
if game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):FindFirstChild("ChandelierObstruction") then 
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):GetChildren()) do 
if v.Name == "ChandelierObstruction" then 
v.HurtPart.CanTouch = false
end 
end 
end 
end 
end)
Anti:Toggle("Anti-Chandelier",false,function(v)
_G.AntiChandelier = v
end)
game:GetService("RunService").RenderStepped:Connect(function()
if _G.AntiSeekArms then
if game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):FindFirstChild("Seek_Arm") then
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild("Assets"):GetChildren()) do 
if v.Name == "Seek_Arm" then 
v.AnimatorPart.CanTouch = false
end 
end 
end 
end 
end)
Anti:Toggle("Anti-Seek Arms",false,function(v)
_G.AntiSeekArms = v
end)
game:GetService("RunService").RenderStepped:Connect(function()
if not (game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character:FindFirstChild("Collision")) then return end
if workspace:FindFirstChild("Eyes") and _G.AntiEyes then
for _, v in workspace:GetChildren() do
if v.Name == "Eyes" and v:FindFirstChild("Core") and v.Core:FindFirstChild("Ambience") and v.Core.Ambience.Playing then
game.ReplicatedStorage.RemotesFolder.MotorReplication:FireServer(-650)
break
end
end
end
if workspace:FindFirstChild("BackdoorLookman") and _G.AntiLookman then
for _, v in workspace:GetChildren() do
if v.Name == "BackdoorLookman" and v:FindFirstChild("Core") and v.Core:FindFirstChild("Ambience") and v.Core.Ambience.Playing then
game.ReplicatedStorage.RemotesFolder.MotorReplication:FireServer(-650)
break
end
end
end
end)
Anti:Toggle("Anti-Eyes",false,function(v)
_G.AntiEyes = v
end)
Anti:Toggle("Anti-Lookman",false,function(v)
_G.AntiLookman = v
end)
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.AntiGiggle then
for _, room in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetChildren()) do
if room.Name == "GiggleCeiling" then
room.Hitbox.CanTouch = false
end
end
end
end)
end)
Anti:Toggle("Anti-Giggle",false,function(v)
_G.AntiGiggle = v
end)
game:GetService("RunService").RenderStepped:Connect(function()
pcall(function()
if _G.AntiGloomEggs then
for _, room in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetChildren()) do
if room.Name == "GloomPile" then
room.Egg.CanTouch = false
end
end
end
end)
end)
Anti:Toggle("Anti-Gloom Eggs",false,function(v)
_G.AntiGloomEggs = v
end)
Anti:Toggle("Anti-Screech",false,function(v)
if v then
game:GetService("ReplicatedStorage").RemotesFolder.Screech.Name = "_Screech"
else
game:GetService("ReplicatedStorage").RemotesFolder._Screech.Name = "Screech"
end
end)
Anti:Toggle("Anti-A90",false,function(v)
if v then
game:GetService("ReplicatedStorage").RemotesFolder.A90.Name = "_A90"
game.Players.LocalPlayer.PlayerGui:WaitForChild("MainUI"):WaitForChild("Jumpscare"):FindFirstChild("Jumpscare_A90").Parent = nil
else
game:GetService("ReplicatedStorage").RemotesFolder._A90.Name = "A90"
game.Players.LocalPlayer.PlayerGui:WaitForChild("MainUI"):WaitForChild("Jumpscare"):FindFirstChild("Jumpscare_A90").Parent = game.Players.LocalPlayers.PlayerGui.MainUI.Jumpscare
end
end)
Anti:Toggle("Anti-Dread",false,function(v)
if v then
game.Players.LocalPlayer.PlayerGui.MainUI.Jumpscare.Jumpscare_Dread.Parent = workspace
game:GetService("ReplicatedStorage").RemotesFolder.Dread.Name = "_Dread"
else
workspace.Jumpscare_Dread.Parent = game.Players.LocalPlayer.PlayerGui.MainUI.Jumpscare
game:GetService("ReplicatedStorage").RemotesFolder._Dread.Name = "Dread"
end
end)
Anti:Toggle("Anti-Halt",false,function(v)
_G.AntiHalt = v
while _G.AntiHalt do wait(0.1)
game:GetService("ReplicatedStorage").ClientModules.EntityModules.Shade.Parent = game.Workspace
end
end)
Anti:Toggle("Anti-Banana",false,function(v)
if v then
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("Part") and v.Name == "BananaPeel" then
v.CanTouch = false
end
end
AntiBanana = workspace.ChildAdded:Connect(function(child)
for _,v in pairs(workspace:GetDescendants()) do
if v:IsA("Part") and v.Name == "BananaPeel" then
v.CanTouch = false
end
end
end)
else
AntiBanana:Disconnect()
end
end)
Anti:Toggle("Anti-Jeff",false,function(v)
if v then
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v.Knife.CanTouch = false 
v.Knife.CanCollide = false
end 
end 
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v.Head.CanTouch = false 
v.Head.CanCollide = false
end 
end 
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v.HumanoidRootPart.CanTouch = false 
v.HumanoidRootPart.CanCollide = false
end 
end 
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v["Left Arm"].CanTouch = false 
v["Left Arm"].CanCollide = false
end 
end
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v["Left Leg"].CanTouch = false 
v["Left Leg"].CanCollide = false
end 
end 
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v["Right Arm"].CanTouch = false 
v["Right Arm"].CanCollide = false
end 
end 
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v["Right Leg"].CanTouch = false 
v["Right Leg"].CanCollide = false
end 
end 
for _,v in pairs(game.workspace:GetChildren()) do
if v.Name == "JeffTheKiller" then 
v.Torso.CanTouch = false 
v.Torso.CanCollide = false
end 
end 
AntiJeff = workspace.ChildAdded:Connect(function(child)
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v.Knife.CanTouch = false 
v.Knife.CanCollide = false
end 
end 
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v.Head.CanTouch = false 
v.Head.CanCollide = false
end 
end 
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v.HumanoidRootPart.CanTouch = false 
v.HumanoidRootPart.CanCollide = false
end 
end 
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v["Left Arm"].CanTouch = false 
v["Left Arm"].CanCollide = false
end 
end
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v["Left Leg"].CanTouch = false 
v["Left Leg"].CanCollide = false
end 
end 
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v["Right Arm"].CanTouch = false 
v["Right Arm"].CanCollide = false
end 
end 
for _,v in pairs(game.workspace:GetChildren()) do 
if v.Name == "JeffTheKiller" then 
v["Right Leg"].CanTouch = false 
v["Right Leg"].CanCollide = false
end 
end 
for _,v in pairs(game.workspace:GetChildren()) do
if v.Name == "JeffTheKiller" then 
v.Torso.CanTouch = false 
v.Torso.CanCollide = false
end 
end 
end)
else
AntiJeff:Disconnect()
end
end)
local Lighting = Tab.Utilities:CraftPage(2)
Lighting:Seperator("Lighting")
Lighting:Toggle("Fullbright",false,function(v)
if v then
game.Lighting.Brightness = 1.5
game.Lighting.GlobalShadows = false
game.Lighting.OutdoorAmbient = Color3.new(1,1,1)
else
game.Lighting.Brightness = 1
game.Lighting.GlobalShadows = true
game.Lighting.OutdoorAmbient = Color3.new(0,0,0)
end
end)
Lighting:Toggle("Removal Fog",false,function(v)
pcall(function()
if not game.Lighting:GetAttribute("FogStart") then game.Lighting:SetAttribute("FogStart", game.Lighting.FogStart) end
if not game.Lighting:GetAttribute("FogEnd") then game.Lighting:SetAttribute("FogEnd", game.Lighting.FogEnd) end
game.Lighting.FogStart = v and 0 or game.Lighting:GetAttribute("FogStart")
game.Lighting.FogEnd = v and math.huge or game.Lighting:GetAttribute("FogEnd")
local fog = game.Lighting:FindFirstChildOfClass("Atmosphere")
if fog then
if not fog:GetAttribute("Density") then fog:SetAttribute("Density", fog.Density) end
fog.Density = v and 0 or fog:GetAttribute("Density")
end
end)
end)
Lighting:Seperator("FPS Booster")
Lighting:Toggle("Low Quality",false,function(v)
if v then
for _, object in pairs(workspace:GetDescendants()) do
if object:IsA("BasePart") then
if not object:GetAttribute("Material") then object:SetAttribute("Material", object.Material) end
if not object:GetAttribute("Reflectance") then object:SetAttribute("Reflectance", object.Reflectance) end
object.Material = true and Enum.Material.Plastic or object:GetAttribute("Material")
object.Reflectance = true and 0 or object:GetAttribute("Reflectance")
elseif object:IsA("Decal") then
if not object:GetAttribute("Transparency") then object:SetAttribute("Transparency", object.Transparency) end
end
end
workspace.Terrain.WaterReflectance = true and 0 or 1
workspace.Terrain.WaterTransparency = true and 0 or 1
workspace.Terrain.WaterWaveSize = true and 0 or 0.05
workspace.Terrain.WaterWaveSpeed = true and 0 or 8
LowQuality = workspace.CurrentRooms.ChildAdded:Connect(function(child)
for _, object in pairs(workspace:GetDescendants()) do
if object:IsA("BasePart") then
if not object:GetAttribute("Material") then object:SetAttribute("Material", object.Material) end
if not object:GetAttribute("Reflectance") then object:SetAttribute("Reflectance", object.Reflectance) end
object.Material = true and Enum.Material.Plastic or object:GetAttribute("Material")
object.Reflectance = true and 0 or object:GetAttribute("Reflectance")
elseif object:IsA("Decal") then
if not object:GetAttribute("Transparency") then object:SetAttribute("Transparency", object.Transparency) end
end
end
workspace.Terrain.WaterReflectance = true and 0 or 1
workspace.Terrain.WaterTransparency = true and 0 or 1
workspace.Terrain.WaterWaveSize = true and 0 or 0.05
workspace.Terrain.WaterWaveSpeed = true and 0 or 8
end)
else
LowQuality:Disconnect()
for _, object in pairs(workspace:GetDescendants()) do
if object:IsA("BasePart") then
if not object:GetAttribute("Material") then object:SetAttribute("Material", object.Material) end
if not object:GetAttribute("Reflectance") then object:SetAttribute("Reflectance", object.Reflectance) end
object.Material = false and Enum.Material.Plastic or object:GetAttribute("Material")
object.Reflectance = false and 0 or object:GetAttribute("Reflectance")
elseif object:IsA("Decal") then
if not object:GetAttribute("Transparency") then object:SetAttribute("Transparency", object.Transparency) end
end
end
workspace.Terrain.WaterReflectance = false and 0 or 1
workspace.Terrain.WaterTransparency = false and 0 or 1
workspace.Terrain.WaterWaveSize = false and 0 or 0.05
workspace.Terrain.WaterWaveSpeed = false and 0 or 8
end
end)
Lighting:Toggle("Removal-Light",false,function(v)
if v then
for _,v in pairs(workspace.CurrentRooms:GetDescendants()) do
if v.Name == "Chandelier" then
v:Destroy()
elseif v.Name == "Light_Fixtures" then
v:Destroy()
end
end
RemovalsLight = workspace.CurrentRooms.ChildAdded:Connect(function(child)
for _,v in pairs(workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do
if v.Name == "Chandelier" then
v:Destroy()
elseif v.Name == "Light_Fixtures" then
v:Destroy()
end
end
end)
else
RemovalsLight:Disconnect()
end
end)
Lighting:Toggle("Removal-Bat",false,function(v)
if v then
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do
if v:IsA("Model") and v.Name == "HangingHalloweenDecor" then
v:Destroy()
end
end
NoBat = workspace.CurrentRooms.ChildAdded:Connect(function(child)
for _,v in pairs(game.workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:GetDescendants()) do
if v:IsA("Model") and v.Name == "HangingHalloweenDecor" then
v:Destroy()
end
end
end)
else
NoBat:Disconnect()
end
end)
Lighting:Seperator("Notifiaction")
_G.AlertVolume = 5
Lighting:Toggle("Notification Entity",false,function(v)
if v then
local Entity = {"SeekNewCloneMoving","SeekMoving","BackdoorLookman","BackdoorRush","GloomPile","Eyes","JeffTheKiller","RushMoving","AmbushMoving","Snare","A60","A120"}
addconnect = workspace.ChildAdded:Connect(function(v)
if table.find(Entity,v.Name) then
repeat task.wait() until game.Players.LocalPlayer:DistanceFromCharacter(v:GetPivot().Position) < 1000 or not v:IsDescendantOf(workspace)
if v:IsDescendantOf(workspace) then
if v.Name == "RushMoving" then
Library:Notify("Entity 'Rush' has spawn,\nhide in closets now!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "AmbushMoving" then
Library:Notify("Entity 'Ambush' has spawn,\nhide in closets now!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "A60" then
Library:Notify("Entity 'A60' has spawn,\nhide in a locker!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "A120" then
Library:Notify("Entity 'A120' has spawn,\nhide in a locker!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "JeffTheKiller" then
Library:Notify("Entity 'JeffTheKiller' has spawn,\ncareful with it!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "Eyes" then
Library:Notify("Entity 'Eyes' has spawn,\ndont look at it!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "GloomPile" then
Library:Notify("Entity 'GloomPile' has spawn,\noff light to survival!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "BackdoorRush" then
Library:Notify("Entity 'Blitz' has spawn,\nhide in closets now!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "BackdoorLookman" then
Library:Notify("Entity 'Lookman' has spawn,\nlook under side!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "SeekMoving" then
Library:Notify("Seek Chase,\ngoodluck for you in chase!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
elseif v.Name == "SeekNewCloneMoving" then
Library:Notify("Seek Chase,\ngoodluck for you in chase!")
if _G.SoundAlert then
local Sound = Instance.new("Sound")
Sound.Parent = game.SoundService
Sound.SoundId = "rbxassetid://4590657391"
Sound.Volume = _G.AlertVolume
Sound.PlayOnRemove = true
Sound:Destroy()
end
end
end
end
end)
else
addconnect:Disconnect()
end
end)
Lighting:Toggle("Play Sound",false,function(v)
_G.SoundAlert = v
end)
Lighting:Dropdown("Volume Notification",{"1","2","3","4","5"},"5",function(v)
_G.AlertVolume = v
end)
local ESP = Tab.Visual:CraftPage(1)
ESP:Seperator("ESP")
ESP:Toggle("Doors",false,function(v)
_G.ESPDoor = v
if v then
local function setup(room)
local Door = room:WaitForChild("Door"):WaitForChild("Door")
task.wait(0.1)
local DoorESP = LibraryESP:AddESP(Door,"Door",Color3.fromRGB(80, 255, 175),25,"DoorESP")
table.insert({},DoorESP)
Door:WaitForChild("Open").Played:Connect(function()
DoorESP:Destroy()
end)
Door.AncestryChanged:Connect(function()
DoorESP:Destroy()
end)
end
DoorINF = workspace.CurrentRooms.ChildAdded:Connect(function(room)
setup(room)
end)
for i,room in pairs(workspace.CurrentRooms:GetChildren()) do
if room:FindFirstChild("Assets") then
setup(room) 
end
end
repeat task.wait() until not _G.ESPDoor
DoorINF:Disconnect()
LibraryESP:Delete("DoorESP")
end
end)
ESP:Toggle("Key",false,function(v)
if v then               
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "KeyObtain" then
LibraryESP:AddESP(v,"Key",Color3.fromRGB(255, 255, 100),25,"KeyESP")
end		
end					                
KeyESP = workspace.CurrentRooms.ChildAdded:Connect(function(child)                       
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "KeyObtain" then
LibraryESP:AddESP(v,"Key",Color3.fromRGB(255, 255, 100),25,"KeyESP")
end		
end	
end)
else
KeyESP:Disconnect()
for _, v in pairs(workspace:GetDescendants()) do
if v.Name == "KeyESP" then
v:Destroy()
end
end
end
end)
ESP:Toggle("Lever Gate",false,function(v)
if v then               
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "LeverForGate" then
LibraryESP:AddESP(v,"Lever Gate",Color3.fromRGB(100, 100, 100),25,"LeverGateESP")
end		
end					                
LeverGateESP = workspace.CurrentRooms.ChildAdded:Connect(function(child)                       
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "LeverForGate" then
LibraryESP:AddESP(v,"Lever Gate",Color3.fromRGB(100, 100, 100),25,"LeverGateESP")
end		
end	
end)
else
LeverGateESP:Disconnect()
for _, v in pairs(workspace:GetDescendants()) do
if v.Name == "LeverGateESP" then
v:Destroy()
end
end
end
end)
ESP:Toggle("Books",false,function(v)
if v then               
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "LiveHintBook" then
LibraryESP:AddESP(v,"Book",Color3.fromRGB(255, 100, 255),25,"BookESP")
end		
end					                
BookESP = workspace.CurrentRooms.ChildAdded:Connect(function(child)                       
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "LiveHintBook" then
LibraryESP:AddESP(v,"Book",Color3.fromRGB(255, 100, 255),25,"BookESP")
end		
end			
end)
else
BookESP:Disconnect()
for _, v in pairs(workspace:GetDescendants()) do
if v.Name == "BookESP" then
v:Destroy()
end
end
end
end)
ESP:Toggle("Breaker",false,function(v)
if v then               
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "LiveBreakerPolePickup" then
LibraryESP:AddESP(v,"Breaker",Color3.fromRGB(100, 100, 100),25,"BreakerESP")
end		
end					                
BreakerESP = workspace.CurrentRooms.ChildAdded:Connect(function(child)                       
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "LiveBreakerPolePickup" then
LibraryESP:AddESP(v,"Breaker",Color3.fromRGB(100, 100, 100),25,"BreakerESP")
end		
end					
end)
else
BreakerESP:Disconnect()
for _, v in pairs(workspace:GetDescendants()) do
if v.Name == "BreakerESP" then
v:Destroy()
end
end
end
end)
ESP:Toggle("Items",false,function(v)
_G.ItemESP = v
 if v then
 local function check(v)
 if v:IsA("Model") and (v:GetAttribute("Pickup") or v:GetAttribute("PropType")) then
 local part = (v:FindFirstChild("Handle") or v:FindFirstChild("Prop"))
 local Items = LibraryESP:AddESP(v,v.Name,Color3.fromRGB(160,190,255),25,"ItemESP")
 table.insert({},Items)
 end
 end     
  local function setup(room)
  local assets = room:WaitForChild("Assets")     
  if assets then  
  ItemESP = assets.DescendantAdded:Connect(function(v)
  check(v) 
  end)            
  for i,v in pairs(assets:GetDescendants()) do
  check(v)
   end    
   task.spawn(function()
   repeat task.wait() until not _G.ItemESP
   subaddcon:Disconnect()  
   end) 
   end 
   end
   ItemESP = workspace.CurrentRooms.ChildAdded:Connect(function(room)
   setup(room)
   end)     
   for i,room in pairs(workspace.CurrentRooms:GetChildren()) do
   if room:FindFirstChild("Assets") then
   setup(room) 
   end
   end
   repeat task.wait() until not _G.ItemESP
   ItemESP:Disconnect()     
   LibraryESP:Delete("ItemESP")
   end
end)
ESP:Toggle("Entitys",false,function(v)
if v then               
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "RushMoving" then
LibraryESP:AddESP(v,"Rush",Color3.fromRGB(100, 100, 100),25,"RushESP")
v.RushNew.Transparency = 0
elseif v.Name == "AmbushMoving" then
LibraryESP:AddESP(v,"Ambush",Color3.fromRGB(0, 255, 0),25,"AmbushESP")
v.RushNew.Transparency = 0
elseif v.Name == "Eyes" then
LibraryESP:AddESP(v,"Eyes",Color3.fromRGB(0, 0, 255),25,"EyesESP")
elseif v.Name == "BackdoorRush" then
LibraryESP:AddESP(v,"Blitz",Color3.fromRGB(255, 0, 0),25,"BlitzESP")
v.Main.Transparency = 0
elseif v.Name == "BackdoorLookman" then
LibraryESP:AddESP(v,"Lookman",Color3.fromRGB(150, 0, 0),25,"LookmanESP")
elseif v.Name == "FigureRig" then
LibraryESP:AddESP(v,"Figure",Color3.fromRGB(255, 0, 0),25,"FigureESP")
elseif v.Name == "FigureRagdoll" then
LibraryESP:AddESP(v,"Figure",Color3.fromRGB(255, 0, 0),25,"FigureESP")
elseif v.Name == "GiggleCeiling" then
LibraryESP:AddESP(v.Handle,"Giggle",Color3.fromRGB(255, 255, 255),25,"GiggleESP")
elseif v.Name == "Grumbo" then
LibraryESP:AddESP(v,"Grumble",Color3.fromRGB(255, 255, 255),25,"GrumbleESP")
elseif v.Name == "A60" then
LibraryESP:AddESP(v,"A60",Color3.fromRGB(255, 0, 0),25,"A60ESP")
v.Main.Transparency = 0
elseif v.Name == "A120" then
LibraryESP:AddESP(v,"A120",Color3.fromRGB(255, 255, 255),25,"A120ESP")
v.Main.Transparency = 0
elseif v.Name == "Dread" then
LibraryESP:AddESP(v,"Dread",Color3.fromRGB(0, 255, 255),25,"DreadESP")
v.Main.Transparency = 0
elseif v.Name == "Snare" then
LibraryESP:AddESP(v,"Snare",Color3.fromRGB(255, 0, 0),25,"SnareESP")
end		
end					                
EntityESP = workspace.ChildAdded:Connect(function(v)                       
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "RushMoving" then
LibraryESP:AddESP(v,"Rush",Color3.fromRGB(100, 100, 100),25,"RushESP")
v.RushNew.Transparency = 0
elseif v.Name == "AmbushMoving" then
LibraryESP:AddESP(v,"Ambush",Color3.fromRGB(0, 255, 0),25,"AmbushESP")
v.RushNew.Transparency = 0
elseif v.Name == "Eyes" then
LibraryESP:AddESP(v,"Eyes",Color3.fromRGB(0, 0, 255),25,"EyesESP")
v.Core.Transparency = 0
elseif v.Name == "BackdoorRush" then
LibraryESP:AddESP(v,"Blitz",Color3.fromRGB(255, 0, 0),25,"BlitzESP")
v.Main.Transparency = 0
elseif v.Name == "BackdoorLookman" then
LibraryESP:AddESP(v,"Lookman",Color3.fromRGB(150, 0, 0),25,"LookmanESP")
v.Core.Transparency = 0
elseif v.Name == "A60" then
LibraryESP:AddESP(v,"A60",Color3.fromRGB(255, 0, 0),25,"A60ESP")
v.Main.Transparency = 0
elseif v.Name == "A120" then
LibraryESP:AddESP(v,"A120",Color3.fromRGB(255, 255, 255),25,"A120ESP")
v.Main.Transparency = 0
elseif v.Name == "Dread" then
LibraryESP:AddESP(v,"Dread",Color3.fromRGB(0, 255, 255),25,"DreadESP")
v.Main.Transparency = 0
end		
end						
end)
EntityESP = workspace.CurrentRooms.ChildAdded:Connect(function(v)
for _,v in pairs(workspace:GetDescendants()) do
if v.Name == "FigureRig" then
LibraryESP:AddESP(v,"Figure",Color3.fromRGB(255, 0, 0),25,"FigureESP")
elseif v.Name == "FigureRagdoll" then
LibraryESP:AddESP(v,"Figure",Color3.fromRGB(255, 0, 0),25,"FigureESP")
elseif v.Name == "GiggleCeiling" then
LibraryESP:AddESP(v.Handle,"Giggle",Color3.fromRGB(255, 255, 255),25,"GiggleESP")
elseif v.Name == "Grumbo" then
LibraryESP:AddESP(v,"Grumble",Color3.fromRGB(255, 255, 255),25,"GrumbleESP")
elseif v.Name == "Snare" then
LibraryESP:AddESP(v,"Snare",Color3.fromRGB(255, 0, 0),25,"SnareESP")
end
end
end)
else
EntityESP:Disconnect()
LibraryESP:Delete("RushESP")
LibraryESP:Delete("AmbushESP")
LibraryESP:Delete("EyesESP")
LibraryESP:Delete("BlitzESP")
LibraryESP:Delete("LookmanESP")
LibraryESP:Delete("FigureESP")
LibraryESP:Delete("GiggleESP")
LibraryESP:Delete("GrumbleESP")
LibraryESP:Delete("A60ESP")
LibraryESP:Delete("A120ESP")
LibraryESP:Delete("DreadESP")
LibraryESP:Delete("SnareESP")
end
end)
ESP:Toggle("Gold",false,function(v)
_G.GoldESP = v
If v then
local function check(v)
if v:IsA(“Model”) and v.Name == “GoldPile” then
task.wait(0.1)
local GoldESP = LibraryESP:AddESP(v,”Gold (“.. tostring(v:GetAttribute(“GoldValue”))..”$)”,Color3.fromRGB(255,255,0),25,”GoldESP”)
table.insert({},GoldESP)
end
end
local function setup(room)
local assets = room:WaitForChild(“Assets”)
GoldESP = assets.DescendantAdded:Connect(function(v)
check(v)
end)
for i,v in pairs(assets:GetDescendants()) do
check(v)
end
task.spawn(function()
Repeat task.wait() until not _G.GoldESP
GoldESP:Disconnect()
end)
end
GoldESP = workspace.CurrentRooms.ChildAdded:Connect(function(room)
setup(room)
end)
for i,room in pairs(workspace.CurrentRooms:GetChildren()) do
if room:FindFirstChild(“Assets”) then
setup(room)
end
end
Repeat task.wait() until not _G.GoldESP
GoldESP:Disconnect()
LibraryESP:Delete(“GoldESP”)
end
end)
local ESPSetting = Tab.Visual:CraftPage(2)
ESPSetting:Seperator("ESP Setting")
ESPSetting:Toggle("Rainbow ESP",false,function(v)
getgenv().RainbowESP = v
end)
ESPSetting:Toggle("Distance ESP",false,function(v)
getgenv().DistanceESP = v
end)
